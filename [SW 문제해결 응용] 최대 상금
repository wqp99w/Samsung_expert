#include<iostream>
#include<set>
#include <string>
using namespace std;

set<pair<string, int>> ts;

int Max = -1;
void dfs(string input, int c, int now) {
	if (c == now) {
		Max = max(Max, stoi(input));
		return;
	}
	for (int i = 0; i < input.size(); i++) {
		for (int j = i + 1; j < input.size(); j++) {
			string temp = input;
			char t = temp[i];
			temp[i] = temp[j];
			temp[j] = t;
			if (ts.find({ temp,now + 1 }) == ts.end()) {
				ts.insert({ temp,now + 1 });
				dfs(temp, c, now + 1);
			}
			
		}
	}
}

int main(int argc, char** argv)
{
	int T;
	cin >> T;
	for (int i = 1; i <= T; i++)
	{
		int c;
		string input;
		cin >> input >> c;
		ts.clear();
		Max = -1;
		dfs(input, c, 0);
		cout << "#" << i << " " << Max << endl;


	}
	return 0;//정상종료시 반드시 0을 리턴해야합니다.
}
